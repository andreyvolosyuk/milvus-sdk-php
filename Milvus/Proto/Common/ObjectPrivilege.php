<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: common.proto

namespace Milvus\Proto\Common;

use UnexpectedValueException;

/**
 * Protobuf type <code>milvus.proto.common.ObjectPrivilege</code>
 */
class ObjectPrivilege
{
    /**
     * Generated from protobuf enum <code>PrivilegeAll = 0;</code>
     */
    const PrivilegeAll = 0;
    /**
     * Generated from protobuf enum <code>PrivilegeCreateCollection = 1;</code>
     */
    const PrivilegeCreateCollection = 1;
    /**
     * Generated from protobuf enum <code>PrivilegeDropCollection = 2;</code>
     */
    const PrivilegeDropCollection = 2;
    /**
     * Generated from protobuf enum <code>PrivilegeDescribeCollection = 3;</code>
     */
    const PrivilegeDescribeCollection = 3;
    /**
     * Generated from protobuf enum <code>PrivilegeShowCollections = 4;</code>
     */
    const PrivilegeShowCollections = 4;
    /**
     * Generated from protobuf enum <code>PrivilegeLoad = 5;</code>
     */
    const PrivilegeLoad = 5;
    /**
     * Generated from protobuf enum <code>PrivilegeRelease = 6;</code>
     */
    const PrivilegeRelease = 6;
    /**
     * Generated from protobuf enum <code>PrivilegeCompaction = 7;</code>
     */
    const PrivilegeCompaction = 7;
    /**
     * Generated from protobuf enum <code>PrivilegeInsert = 8;</code>
     */
    const PrivilegeInsert = 8;
    /**
     * Generated from protobuf enum <code>PrivilegeDelete = 9;</code>
     */
    const PrivilegeDelete = 9;
    /**
     * Generated from protobuf enum <code>PrivilegeGetStatistics = 10;</code>
     */
    const PrivilegeGetStatistics = 10;
    /**
     * Generated from protobuf enum <code>PrivilegeCreateIndex = 11;</code>
     */
    const PrivilegeCreateIndex = 11;
    /**
     * Generated from protobuf enum <code>PrivilegeIndexDetail = 12;</code>
     */
    const PrivilegeIndexDetail = 12;
    /**
     * Generated from protobuf enum <code>PrivilegeDropIndex = 13;</code>
     */
    const PrivilegeDropIndex = 13;
    /**
     * Generated from protobuf enum <code>PrivilegeSearch = 14;</code>
     */
    const PrivilegeSearch = 14;
    /**
     * Generated from protobuf enum <code>PrivilegeFlush = 15;</code>
     */
    const PrivilegeFlush = 15;
    /**
     * Generated from protobuf enum <code>PrivilegeQuery = 16;</code>
     */
    const PrivilegeQuery = 16;
    /**
     * Generated from protobuf enum <code>PrivilegeLoadBalance = 17;</code>
     */
    const PrivilegeLoadBalance = 17;
    /**
     * Generated from protobuf enum <code>PrivilegeImport = 18;</code>
     */
    const PrivilegeImport = 18;
    /**
     * Generated from protobuf enum <code>PrivilegeCreateOwnership = 19;</code>
     */
    const PrivilegeCreateOwnership = 19;
    /**
     * Generated from protobuf enum <code>PrivilegeUpdateUser = 20;</code>
     */
    const PrivilegeUpdateUser = 20;
    /**
     * Generated from protobuf enum <code>PrivilegeDropOwnership = 21;</code>
     */
    const PrivilegeDropOwnership = 21;
    /**
     * Generated from protobuf enum <code>PrivilegeSelectOwnership = 22;</code>
     */
    const PrivilegeSelectOwnership = 22;
    /**
     * Generated from protobuf enum <code>PrivilegeManageOwnership = 23;</code>
     */
    const PrivilegeManageOwnership = 23;
    /**
     * Generated from protobuf enum <code>PrivilegeSelectUser = 24;</code>
     */
    const PrivilegeSelectUser = 24;
    /**
     * Generated from protobuf enum <code>PrivilegeUpsert = 25;</code>
     */
    const PrivilegeUpsert = 25;
    /**
     * Generated from protobuf enum <code>PrivilegeCreateResourceGroup = 26;</code>
     */
    const PrivilegeCreateResourceGroup = 26;
    /**
     * Generated from protobuf enum <code>PrivilegeDropResourceGroup = 27;</code>
     */
    const PrivilegeDropResourceGroup = 27;
    /**
     * Generated from protobuf enum <code>PrivilegeDescribeResourceGroup = 28;</code>
     */
    const PrivilegeDescribeResourceGroup = 28;
    /**
     * Generated from protobuf enum <code>PrivilegeListResourceGroups = 29;</code>
     */
    const PrivilegeListResourceGroups = 29;
    /**
     * Generated from protobuf enum <code>PrivilegeTransferNode = 30;</code>
     */
    const PrivilegeTransferNode = 30;
    /**
     * Generated from protobuf enum <code>PrivilegeTransferReplica = 31;</code>
     */
    const PrivilegeTransferReplica = 31;
    /**
     * Generated from protobuf enum <code>PrivilegeGetLoadingProgress = 32;</code>
     */
    const PrivilegeGetLoadingProgress = 32;
    /**
     * Generated from protobuf enum <code>PrivilegeGetLoadState = 33;</code>
     */
    const PrivilegeGetLoadState = 33;
    /**
     * Generated from protobuf enum <code>PrivilegeRenameCollection = 34;</code>
     */
    const PrivilegeRenameCollection = 34;
    /**
     * Generated from protobuf enum <code>PrivilegeCreateDatabase = 35;</code>
     */
    const PrivilegeCreateDatabase = 35;
    /**
     * Generated from protobuf enum <code>PrivilegeDropDatabase = 36;</code>
     */
    const PrivilegeDropDatabase = 36;
    /**
     * Generated from protobuf enum <code>PrivilegeListDatabases = 37;</code>
     */
    const PrivilegeListDatabases = 37;
    /**
     * Generated from protobuf enum <code>PrivilegeFlushAll = 38;</code>
     */
    const PrivilegeFlushAll = 38;
    /**
     * Generated from protobuf enum <code>PrivilegeCreatePartition = 39;</code>
     */
    const PrivilegeCreatePartition = 39;
    /**
     * Generated from protobuf enum <code>PrivilegeDropPartition = 40;</code>
     */
    const PrivilegeDropPartition = 40;
    /**
     * Generated from protobuf enum <code>PrivilegeShowPartitions = 41;</code>
     */
    const PrivilegeShowPartitions = 41;
    /**
     * Generated from protobuf enum <code>PrivilegeHasPartition = 42;</code>
     */
    const PrivilegeHasPartition = 42;
    /**
     * Generated from protobuf enum <code>PrivilegeGetFlushState = 43;</code>
     */
    const PrivilegeGetFlushState = 43;

    private static $valueToName = [
        self::PrivilegeAll => 'PrivilegeAll',
        self::PrivilegeCreateCollection => 'PrivilegeCreateCollection',
        self::PrivilegeDropCollection => 'PrivilegeDropCollection',
        self::PrivilegeDescribeCollection => 'PrivilegeDescribeCollection',
        self::PrivilegeShowCollections => 'PrivilegeShowCollections',
        self::PrivilegeLoad => 'PrivilegeLoad',
        self::PrivilegeRelease => 'PrivilegeRelease',
        self::PrivilegeCompaction => 'PrivilegeCompaction',
        self::PrivilegeInsert => 'PrivilegeInsert',
        self::PrivilegeDelete => 'PrivilegeDelete',
        self::PrivilegeGetStatistics => 'PrivilegeGetStatistics',
        self::PrivilegeCreateIndex => 'PrivilegeCreateIndex',
        self::PrivilegeIndexDetail => 'PrivilegeIndexDetail',
        self::PrivilegeDropIndex => 'PrivilegeDropIndex',
        self::PrivilegeSearch => 'PrivilegeSearch',
        self::PrivilegeFlush => 'PrivilegeFlush',
        self::PrivilegeQuery => 'PrivilegeQuery',
        self::PrivilegeLoadBalance => 'PrivilegeLoadBalance',
        self::PrivilegeImport => 'PrivilegeImport',
        self::PrivilegeCreateOwnership => 'PrivilegeCreateOwnership',
        self::PrivilegeUpdateUser => 'PrivilegeUpdateUser',
        self::PrivilegeDropOwnership => 'PrivilegeDropOwnership',
        self::PrivilegeSelectOwnership => 'PrivilegeSelectOwnership',
        self::PrivilegeManageOwnership => 'PrivilegeManageOwnership',
        self::PrivilegeSelectUser => 'PrivilegeSelectUser',
        self::PrivilegeUpsert => 'PrivilegeUpsert',
        self::PrivilegeCreateResourceGroup => 'PrivilegeCreateResourceGroup',
        self::PrivilegeDropResourceGroup => 'PrivilegeDropResourceGroup',
        self::PrivilegeDescribeResourceGroup => 'PrivilegeDescribeResourceGroup',
        self::PrivilegeListResourceGroups => 'PrivilegeListResourceGroups',
        self::PrivilegeTransferNode => 'PrivilegeTransferNode',
        self::PrivilegeTransferReplica => 'PrivilegeTransferReplica',
        self::PrivilegeGetLoadingProgress => 'PrivilegeGetLoadingProgress',
        self::PrivilegeGetLoadState => 'PrivilegeGetLoadState',
        self::PrivilegeRenameCollection => 'PrivilegeRenameCollection',
        self::PrivilegeCreateDatabase => 'PrivilegeCreateDatabase',
        self::PrivilegeDropDatabase => 'PrivilegeDropDatabase',
        self::PrivilegeListDatabases => 'PrivilegeListDatabases',
        self::PrivilegeFlushAll => 'PrivilegeFlushAll',
        self::PrivilegeCreatePartition => 'PrivilegeCreatePartition',
        self::PrivilegeDropPartition => 'PrivilegeDropPartition',
        self::PrivilegeShowPartitions => 'PrivilegeShowPartitions',
        self::PrivilegeHasPartition => 'PrivilegeHasPartition',
        self::PrivilegeGetFlushState => 'PrivilegeGetFlushState',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

