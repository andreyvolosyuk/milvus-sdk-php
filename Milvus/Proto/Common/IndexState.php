<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: common.proto

namespace Milvus\Proto\Common;

use UnexpectedValueException;

/**
 * Protobuf type <code>milvus.proto.common.IndexState</code>
 */
class IndexState
{
    /**
     * Generated from protobuf enum <code>IndexStateNone = 0;</code>
     */
    const IndexStateNone = 0;
    /**
     * Generated from protobuf enum <code>Unissued = 1;</code>
     */
    const Unissued = 1;
    /**
     * Generated from protobuf enum <code>InProgress = 2;</code>
     */
    const InProgress = 2;
    /**
     * Generated from protobuf enum <code>Finished = 3;</code>
     */
    const Finished = 3;
    /**
     * Generated from protobuf enum <code>Failed = 4;</code>
     */
    const Failed = 4;
    /**
     * Generated from protobuf enum <code>Retry = 5;</code>
     */
    const Retry = 5;

    private static $valueToName = [
        self::IndexStateNone => 'IndexStateNone',
        self::Unissued => 'Unissued',
        self::InProgress => 'InProgress',
        self::Finished => 'Finished',
        self::Failed => 'Failed',
        self::Retry => 'Retry',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

