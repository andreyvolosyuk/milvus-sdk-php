<?php

namespace Volosyuk\MilvusPhp\Client;

use Google\Protobuf\Internal\Message;
use Grpc\Interceptor;


class HeaderAddderInterceptor extends Interceptor
{
    /**
     * @var array
     */
    private $parameters;

    public function __construct(array $parameters = [])
    {
        $this->parameters = $parameters;
    }

    /**
     * @param string $method
     * @param Message $argument
     * @param string[] $deserialize
     * @param callable $continuation
     * @param array $metadata
     * @param array $options
     * @return mixed
     */
    public function interceptUnaryUnary(
        $method,
        $argument,
        $deserialize,
        $continuation,
        array $metadata = [],
        array $options = [])
    {
        foreach ($this->parameters as $key => $value) {
            $metadata[$key] = [$value];
        }

        return $continuation($method, $argument, $deserialize, $metadata, $options);
    }

    public function interceptStreamStream($method, $deserialize, $continuation, array $metadata = [], array $options = [])
    {
        return parent::interceptStreamStream($method, $deserialize, $continuation, $metadata, $options); // TODO: Change the autogenerated stub
    }

    /**
     * @param string $key
     * @param string $value
     *
     * @return void
     */
    public function setParameter(string $key, string $value)
    {
        $this->parameters[$key] = $value;
    }
}